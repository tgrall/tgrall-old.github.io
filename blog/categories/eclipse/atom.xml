<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Eclipse | Tug's Blog]]></title>
  <link href="http://tgrall.github.io/blog/categories/eclipse/atom.xml" rel="self"/>
  <link href="http://tgrall.github.io/"/>
  <updated>2020-01-02T17:13:18+01:00</updated>
  <id>http://tgrall.github.io/</id>
  <author>
    <name><![CDATA[Tug Grall]]></name>
    <email><![CDATA[tugdual@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Oracle Donates Toplink to Eclipse]]></title>
    <link href="http://tgrall.github.io/blog/2007/03/06/oracle-donates-toplink-to-eclipse/"/>
    <updated>2007-03-06T23:48:56+01:00</updated>
    <id>http://tgrall.github.io/blog/2007/03/06/oracle-donates-toplink-to-eclipse</id>
    <content type="html"><![CDATA[<p>Oracle has announced yesterday during  <a href="http://www.eclipsecon.org/">EclipseCon</a> in Santa Clara (California) that it <em>open-sources</em> Oracle Toplink as part of the Eclipse Project.</p>

<p>The idea is to open source all the features of Toplink (ORM/JPA, OXM/JAXB, and EIS support), but also features that are currently under development and will be part of the Eclipse project:</p>

<ul>
<li>Service Data Objects (SDO) implementation and SDO Data Access Service (DAS) that leverages JPA for use with SDO.*   XR (XML-Relational) that provides a completely metadata driven approach to obtaining relational data as XML.</li>
<li>DBWS which exposes XR as a web service. With DBWS, you can easily build web services that access relational data without any programming.</li>
</ul>


<p>One part will be kept by Oracle, this is the &ldquo;glue&rdquo; code that is used for the integration with OracleAS that is probably not useful for anybody but Oracle.
For details check out the <a href="http://www.oracle.com/corporate/press/2007_mar/OpenSource-TopLink.html">press release</a> and the <a href="http://www.oracle.com/technology/tech/eclipse/pdf/eclipselink-faq.pdf">FAQ</a>.</p>

<p>If you are at EclipseCon do not hesitate to visit the Oracle booth to learn more about this great news for the Java developers.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Eclipse WTP and OracleAS/OC4J]]></title>
    <link href="http://tgrall.github.io/blog/2005/11/11/using-eclipse-wtp-and-oracleas-slash-oc4j/"/>
    <updated>2005-11-11T20:23:03+01:00</updated>
    <id>http://tgrall.github.io/blog/2005/11/11/using-eclipse-wtp-and-oracleas-slash-oc4j</id>
    <content type="html"><![CDATA[<p>You have probably heard about <a href="http://www.eclipse.org/webtools/">Web Tools Platform (WTP)</a>, this project
extends Eclipse with various tools for developping J2EE applications.
It contains editors for HTML, JSP, XML and so more&hellip; In addition to
various wizards to create Web Services, EJB, Connector and more&hellip; WTP
allows developers to package the application using J2EE standard
packagind: EAR,WAR,RAR,JAR and deploy and run the application from the
IDE.</p>

<p>The challenge here is not how
you build J2EE components using an IDE, but more how do you package,
deploy and run your application easily from the IDE. Eclipse WTP allows
you like Oracle JDeveloper does, to package the various J2EE components
in standard archives (JAR, WAR, EAR, RAR, &hellip;) and deploy them to a
J2EE container. WTP project has a very nice list of containers you
can deploy to: Oracle, IBM, BEA, JBoss, Tomcat, &hellip;</p>

<p><a href="http://www.grallandco.com/blog/archives/wtp/wtp-server.html"><img src="http://www.grallandco.com/blog/archives/wtp/wtp-server-thumb.PNG" alt="" /></a></p>

<p>With the latest build of Eclipse WTP (Release 1.0M8), Oracle
Application Server 10g is now part of the default server list. So if
your are an OracleAS user you can now use WTP and start to run and
debut your application running in OracleAS from Eclipse.</p>

<p>What do you need to start using WTP and OracleAS:</p>

<ol>
<li>Download and install Eclipse WTP 1.0M8 from <a href="http://www.eclipse.org/webtools/">Eclipse</a> site.</li>
<li>Download and install OracleAS 10g (OC4J 10.1.3 Developer Preview 4) from <a href="http://www.oracle.com/technology/tech/java/oc4j/1013/index.html">OTN</a></li>
<li>You must set a administrator password for OC4J using the start command</li>
<li>Done! You can now use OC4J
and Eclipse.&nbsp;<a href="http://www.grallandco.com/blog/archives/wtp/wtp-oc4j.swf">I have a viewlet that shows the basic steps to create and run your first Web application</a>.</li>
</ol>


<p><a href="http://www.grallandco.com/blog/archives/wtp/wtp-server-conf.html"><img src="http://www.grallandco.com/blog/archives/wtp/wtp-server-conf-thumb.png" alt="" /></a></p>

<p>OC4J configuration</p>

<p>Update <em>(Nov,18)</em> : I forgot to mention the <a href="http://www.eclipse.org/webtools/community/tutorials/OracleServerAdapter/OracleServerAdapter.html">Oracle Application  Server Adapter tutorial</a> from the Web Tools project.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Eclipse and OC4J Using the Lomboz Plugin]]></title>
    <link href="http://tgrall.github.io/blog/2004/12/20/eclipse-and-oc4j-using-the-lomboz-plugin/"/>
    <updated>2004-12-20T19:29:07+01:00</updated>
    <id>http://tgrall.github.io/blog/2004/12/20/eclipse-and-oc4j-using-the-lomboz-plugin</id>
    <content type="html"><![CDATA[<p>You can find a new <a href="http://www.oracle.com/technology/tech/java/oc4j/1013/howtos/how-to-configure-lomboz/doc/lomboz-howto-part-1.html">How-To Document</a> that explains how to use OC4J and Eclipse together using the Lomboz plugin.</p>

<p>You can download the server definition files for the Production release of OC4J 10g (9.0.4) or for the J2EE 1.4 Developer Preview 10.1.3.</p>
]]></content>
  </entry>
  
</feed>
