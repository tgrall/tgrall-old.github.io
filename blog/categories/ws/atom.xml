<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Ws | Tug's Blog]]></title>
  <link href="http://tgrall.github.io/blog/categories/ws/atom.xml" rel="self"/>
  <link href="http://tgrall.github.io/"/>
  <updated>2019-09-19T05:47:46+02:00</updated>
  <id>http://tgrall.github.io/</id>
  <author>
    <name><![CDATA[Tug Grall]]></name>
    <email><![CDATA[tugdual@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Exposing a Database as a Web Service... With OracleAS and DB]]></title>
    <link href="http://tgrall.github.io/blog/2008/03/25/exposing-a-database-as-a-web-service-dot-dot-dot-with-oracleas-and-db/"/>
    <updated>2008-03-25T10:04:28+01:00</updated>
    <id>http://tgrall.github.io/blog/2008/03/25/exposing-a-database-as-a-web-service-dot-dot-dot-with-oracleas-and-db</id>
    <content type="html"><![CDATA[<p>I am just cross posting this entry to react to this very interesting article:</p>

<ul>
<li><a href="http://www.developer.com/db/article.php/3735771">Exposing a Database as a Web Service</a> a developer.com article&hellip;</li>
</ul>


<h4>Oracle Application Server Web Services</h4>

<p>If you are an Oracle Application Server user, you may know that it is possible to expose database resources as Web Services using the OracleAS Web Services stack. You can for example using JAX-RPC based Web Service create service on a PL/SQL stored procedure, a SQL statement and even poste message on a queue (AQ). This is available in the Web Service Assembler (wsa) tool and also JDeveloper.</p>

<p>At the end when you have executed the wizard, you have a complete JavaEE application ready to be deloyed. All the JDBC calls and PL type mapping are done automatically by the wizard&hellip; very neat Take a look to the <a href="http://download.oracle.com/docs/cd/B32110_01/web.1013/b28974/devdbase.htm#BDCCBHFG">Assembling Database Web Services</a> documentation.</p>

<p>Here the archtecture schema of OracleAS Database Web Services:</p>

<p><img class="<a" src="href="http://1.bp.blogspot.com/_aoQgQ1obiyE/R-ni1lmTTxI/AAAAAAAAADc/Os4eMkzOGXM/s320/aswsv009.gif">http://1.bp.blogspot.com/_aoQgQ1obiyE/R-ni1lmTTxI/AAAAAAAAADc/Os4eMkzOGXM/s320/aswsv009.gif</a>&#8221;></p>

<p>It is important to mention that such service can leverage the WS-* support of OracleAS and any JAX-RPC handler you want to add to the service.</p>

<h4>BPEL PM and Database Resources</h4>

<p>In addition to a pure Java developer approach it is also possible to expose database resource as Web Service using Oracle BPEL PM, yeah&hellip; it could be overloaded, but still it is possible and very easy to do. See the chapter <a href="http://download.oracle.com/docs/cd/B31017_01/core.1013/b28764/bpel006.htm#CIHCIDGF">BPEL: Communicating with a Database</a></p>

<h4>Oracle RDBMS 11 NDWS</h4>

<p>Orale RDBMS introduced a new feature that is called: Native Oracle XML DB Web Services, that allows developer to directly expose Web Services from the DB. Take a look to the chapter <a href="http://download.oracle.com/docs/cd/B28359_01/appdev.111/b28369/xdb_web_services.htm#ADXDB3900">Using Native Oracle XML DB Web Services</a>.</p>

<p>Note that in this case you do not have any WS-* support without another technical solution that could be Oracle Web Service Manager or any other solutions (such as a SOA appliance like for example IBM dataPower)</p>

<p>hmm I have not used that much this feature since I have left Oracle&hellip; I wonder when Oracle will provide a OS X release that will allow me to use my computer without any VM&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oracle JAX-RPC: How to Change the Character Encoding?]]></title>
    <link href="http://tgrall.github.io/blog/2008/02/02/oracle-jax-rpc-how-to-change-the-character-encoding/"/>
    <updated>2008-02-02T02:13:21+01:00</updated>
    <id>http://tgrall.github.io/blog/2008/02/02/oracle-jax-rpc-how-to-change-the-character-encoding</id>
    <content type="html"><![CDATA[<p>By default Oracle Web Service client is sending the SOAP messages using an UTF-8 encoding. This is the recommendation of WS-I Basic Profile. To be exact it says UTF-8 or UTF-16.</p>

<p>It is quite simple to change this encoding&hellip;</p>

<p>First you have to know that the JAX-RPC container will return the same character encoding than the one that is received. To change the character encoding, you just need to set the <code>ClientConstants.CHARACTER_SET_ENCODING</code> to the value you want to use. Here some simple client code:</p>

<pre><code class="java">Stub stub = (Stub)myPort.getPort();
stub._setProperty(oracle.webservices.ClientConstants.CHARACTER_SET_ENCODING, "UTF-16");
</code></pre>

<p>Most of the Web Services stacks are offering the same kind of utility to do that, for example here the property you must set to do the same in IBM&rsquo;s JAX-RPC implementation: <code>com.ibm.wsspi.webservices.Constants.MESSAGE_CHARACTER_SET_ENCODING</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web Services and Files Exchange]]></title>
    <link href="http://tgrall.github.io/blog/2007/12/20/web-services-and-files-exchange/"/>
    <updated>2007-12-20T09:22:32+01:00</updated>
    <id>http://tgrall.github.io/blog/2007/12/20/web-services-and-files-exchange</id>
    <content type="html"><![CDATA[<p>SOAP based Web Services are now very common in the enterprise architecture, and quite often, applications that consume or publish services would need to send binary content such as images, PDF or Word documents (or anything you have in mind&hellip;). The SOAP and XML provide different way to achieve this. So what are the challenges around binary data exchange using SOAP based Web Services:</p>

<ul>
<li>The main goal of Web Services is <strong>interoperability</strong>; so when you are offering a service, you need to be careful about the technical choice you are making. SOAP has been one great success in term of interoperability. I am aware that REST is also a very good fit for that but since I talk about SOAP and later WS-* standards, I do not want to talk about REST more in this post, the only thing that you can put in your mind is before choosing to implement SOAP based Web Services, ask the following question to yourself: &ldquo;do I really need SOAP services or REST would be enough?&rdquo;&hellip; That said let&rsquo;s continue on SOAP and binary content exchange. When talking about binary content, the interoperability comes with some trade off around for example performance/message sized or impact on developer. This will be discussed later, but always keep in mind that interoperability is the key point of Web Services. If this is not the case on your project, that means you probably do not need to use SOAP that has an important overhead in general.</li>
<li><strong>Performance</strong> and <strong>Scalability</strong> is also quite important when you are building a service based application. Especially that often you cannot predict exactly how much a service will be used. We have to keep in mind that often services are build to be reusable, it is one of the basic best practices of development, so if the service is really &ldquo;reused&rdquo; it is important to keep it running with acceptable performances. This is why when talking about binary content, with SOAP it is important to talk about the impact of it on the size of the message and the processing cost.</li>
<li>When using SOAP <strong>Composability</strong> is also quite important. In the context of binary content exchange with XML/SOAP it is important to support composability of the WS-* standard, and this in a performant manner. An example would be that a services that is  sing WS-Security to sign part of the messages should be able to sign the PDF document using the same standard.</li>
<li><p><strong>Impact on development</strong>: it is interesting also when choosing the way binary content should be exchanged with SOAP, to see how much impact it has on the development itself. Does a developer must import specific API to be sure that the binary content is properly sent/consumed by the server or client. Note: I will talk about Java here, and particularly about JAX-WS/JAX-RPC since it is the stacks that I know the much, but the remarks would be the same on all technologies.Let&rsquo;s now dive into the different options that are offered to a developer/architect to exchange document using SOAP:</p></li>
<li><p>XML Base64 encoding</p></li>
<li>SOAP With Attachment (SwA) using MIME (Multipurpose Internet Mail Extensions)</li>
<li><del>SOAP With Attachment using DIME (Direct Internet Message Encapsulation)</del></li>
<li>Message Transmission Optimization Mechanism (MTOM)</li>
</ul>


<p>First of all, I will not talk in detail about the 3rd point around SOAP with Attachment with DIME, for a simple reason: this approach has been pushed by Microsoft around 2003/2004 and it is now deprecated in favor of MTOM.</p>

<h3>Base64 Encoding</h3>

<p>Base64 is part of the core XML capabilities, and when using it to exchange binary content in a SOAP message it has some very good advantages:</p>

<ul>
<li>Since it is part of XML itself, it has a <strong>great interoperability</strong>, I can say that all stacks will be able to consume or send messaged that contains Base64 data.</li>
<li>For the same reason it <strong>does not have any impact on development</strong>, most of the Java stacks will automatically use base64 encoding when byte[] paramters will be present.</li>
<li>Always because of the fact that is it 100% XML based, the <strong>composability</strong> with other XML/WS-* standard <strong>is very good</strong>.</li>
<li>So far everything looks great for this approach, but the trade off is the following:
Base64 encoding <strong>is not efficient</strong>, since &ldquo;lot of&rdquo; CPU will be used to encode and decode the binary content. In addition the size of the encoded data would be around 30% bigger than the binary content itself. (It can still be used for small dataset)</li>
</ul>


<h3>SOAP with Attachment (SwA)</h3>

<p>The SOAP with Attachment specification is the first effort of the Web Services industry to solve the problem of binary content with SOAP. The idea is to  In addition to the W3C Note, the WS-Interoperability organization, has extend this recommendation to create a basic attachment profile to enforce the interoperability of it, using the SOAP with Attachment Reference (swaRef).</p>

<ul>
<li>The good part of SwA and is the fact that it has been noted by the W3C but also adopted by the WS-I organization. But in fact the<span style="font-weight: bold;"> interoperability is not that great</span>, mainly because none of the Microsoft Web Services solution support SwA. It is true that most of the Java stacks, starting with the standard JAX-RPC/JAX-WS is supporting SwA and swaRef but it is not enough to call it a good interoperability.</li>
<li>The reason why Microsoft refused to implement it, and why it is only a W3C note (and not a recommendation) it is because  <strong>SOAP with Attachment has poor composability</strong>. The reason why it is hard to use WS-* standard with SwA, it is because it breaks some part of the model by ignoring the SOAP/XML processing and just put the document in the MIME header, and a simple reference to it into the SOAP message.</li>
<li><em>*SOAP with Attachment is efficient</em>, because of the previous point. The SOAP stack does not really deal with the content and just stream it into the MIME header.</li>
<li>When it is used with JAX-RPC and JAX-WS, <strong>has an impact on the developer</strong>, that must use specific Java API to build it service and put specific data types in the WSDL. The impact on development is not large, but still developper has to think about providing the good method signature or WSDL entry to enforce the use of SwA/swaRef in its service. Where I do believe most developers would expect this to be transparent.</li>
</ul>


<h3>Message Transmission Optimization Mechanism (MTOM)</h3>

<p>The last mechanism is also based on MIME on the wire to exchange the binary content, but the way the message (SOAP+MIME) is build is totally different from the previous SwA approach. MTOM has been based on the &ldquo;experience&rdquo; of the others mechanisms, to be able to support composability without impacting the performance and the development.</p>

<ul>
<li><strong>Interoperability is virtually great</strong>. It is great because it has been pushed by major vendors such as IBM, Microsoft, BEA, Oracle and it is a <a href="http://www.w3.org/TR/soap12-mtom/">W3C recommendation</a>, so interoperability should be good. I put a &ldquo;virtually&rdquo;, because to be interoperable the various Web Services stack must implement it, and it is not the case yet. Today, most of the latest stacks are supporting MTOM so it should not be an issue if you are starting a project.</li>
<li><strong>Composability is perfect</strong>, since MTOM does use the SOAP envelop but it provides an automatic and transparent optimization to put the binary content  on the MIME header. During the serialization of the message, the SOAP engine is working with the content with a temporary base64 representation of the content allowing all the WS-* operation needed, for example an XML signature, but without the overhead of dealing with base64 over the wire.</li>
<li><strong>MTOM appears like the most efficient</strong> way of dealing with large document and SOAP.</li>
<li>Because MTOM is using the same approach than the pure XML base64 process, <strong>it does not have any impact on development</strong>. In fact this the the Web Service stack that choose to use base64 (embedding the document) or MTOM over the wire. And this could be done in conjunction with a WS-Policy. As you can see in the <a href="http://www.w3.org/Submission/WS-MTOMPolicy/">WS-MTOMPolicy</a> this is not under the control of the developer but more under the control of the administrator and then the applications to choose or not to use MTOM.</li>
</ul>


<h3>But&hellip; Which one I should use?</h3>

<p>Based on the different points described earlier is looks like <strong>MTOM is the way to go</strong>; even if this is true it cannot be summarized to this. First of all MTOM is not supported by all the stacks, so if you cannot control the consumers of your services and cannot impose a modern stack, MTOM may not be the best approach. For me, the second on the list is the Base64 approach, because of high interoperability but it is important to remember that has an impact on performance/processing. I personnally would not push SwA because of its non support in the Microsoft world&hellip; As you know the world is not yet 100% Java based ;).</p>

<p>Let&rsquo;s take a look on which stacks are supporting MTOM today:</p>

<ul>
<li>JAX-WS reference implementation (and Metro)</li>
<li>IBM Websphere 6.x with SOA Feature Pack</li>
<li>BEA Weblogic 10* OracleAS 10gR3 (10.1.3.1) JAX-RPC and FWM 11 preview (JAX-RPC and JAX-WS)</li>
<li>Axis2</li>
<li>XFire</li>
<li>JBossWSYou can find more information on these comparison matrices : <a href="http://wiki.apache.org/ws/StackComparison">Apache WS Stack Comparison</a> and <a href="http://xfire.codehaus.org/Stack+Comparison">Xfire Comparison Matrix</a>. (these two are probably very interesting to keep&hellip; unfortunately they do not contains any MSFT data. I had one in the past, but cannot find it&hellip; if you have such matrix feel free to post it in comment.)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Oracle Web Services: Sharing Session Between Client Calls]]></title>
    <link href="http://tgrall.github.io/blog/2007/02/15/oracle-web-services-sharing-session-between-client-calls/"/>
    <updated>2007-02-15T09:50:01+01:00</updated>
    <id>http://tgrall.github.io/blog/2007/02/15/oracle-web-services-sharing-session-between-client-calls</id>
    <content type="html"><![CDATA[<p>OracleAS Web Services Runtime provides a support for stateful Web Services that is based on HTTP /Servlet session. Some people will probably say that Web Services should not be stateful, or at least not based on the protocol&hellip; However, today most of Web Services are using HTTP, and in some specific cases it is very useful to be able to have a state.</p>

<p>In this post, I am not explaining how to enable stateful services and clients, since it is documented in the <a href="http://download.oracle.com/docs/cd/B31017_01/web.1013/b28974/devjavaclass.htm#BEIDDAFG">Java Classes and Stateful Web Wervices</a> chapter of the developer guide. Here I am show you how you can using client side programming share the same state (session) between different web services calls (even different services running in the same server side application).</p>

<p>The tip used here is about the association of cookies to the client instance (JAX-WS Stub or Call object). Here the code you have to write to do that using DII, will be very similar when using static Stub</p></p>

<p>1- Enable the state management</p>

<pre><code class="java">...
Service service = sf.createService(qName);
QName port = new QName("CartService");
Call call = service.createCall(port);
call.setProperty(Stub.SESSION_MAINTAIN_PROPERTY, Boolean.valueOf(true));  // this is necessary to be able to manipulate cookie
...
</code></pre>

<p> 2- Create a Map that contains the Cookies and assign it to the call (or Stub)</p>

<pre><code class="java">
...
 Map cookieMap = new HashMap();
call.setProperty(ClientConstants.COOKIE_MAP, cookieMap);
...
</code></pre>

<p>This specific step associates a map that will contains all the cookie with the call/stub instance. You will be able then to manipulate the Map to get or set the cookies.</p>

<p> 3- How to get the <code>JSESSION</code> cookie</p>

<pre><code class="java">private Cookie getJSessionCookie(Call call) {
  Map cookies = (Map)call.getProperty(ClientConstants.COOKIE_MAP);

  if (cookies != null &amp;&amp; !cookies.isEmpty()) {
    Iterator it =  cookies.values().iterator();
    while (it.hasNext()) {
      Cookie cookie = (Cookie)it.next();
      if (cookie.getName().equals("JSESSIONID")) {
        return cookie;
      }
    }
  }

  return null;
}
</code></pre>

<p>Note that the Cookie object is an instance of Oracle <span style="font-family:courier new;">HTTPClient.Cookie</span>.</p>

<p>4- Utilizing the Cookie</p>

<p>So now you have all the information to be able to get the Session information when the stateful conversation has started;</p>

<p>In this example each time the call.invoke() is done, a counter is incremented on the server.</p>

<pre><code class="java">Call call = service.createCall(port);
call.setProperty(Stub.SESSION_MAINTAIN_PROPERTY, Boolean.valueOf(true));  // this is necessary to be able to manipulate cookie
Map cookieMap = new HashMap();
call.setProperty(ClientConstants.COOKIE_MAP, cookieMap);
... // The session will only be created after the first invoke
call.invoke(...); // counter = 1 call.invoke(...); // counter = 2 since on the same session

... // the session is now created so you can get the cookie
Cookie mySession = getJSessionCookie(call)
...
</code></pre>

<p>You can now use the cookie in another call using the following code:</p>

<pre><code class="java">mySession ..  // was extracted from the call #1
...// now I am creating a new call instance (myNewCall) that could be in another class
Call myNewCall = service.createCall(port);
myNewCall.setProperty(Stub.SESSION_MAINTAIN_PROPERTY, Boolean.valueOf(true));  // this is necessary to be able to manipulate cookie
Map cookieMap = new HashMap();
// add the cookie to the map this will add the cookie to the HTTP request so it will be associated to the same session (/state)
cookieMap.put(mySession,mySession);// associate the cookie Map to the call
myNewCall.setProperty(ClientConstants.COOKIE_MAP, cookieMap);
...
myNewCall.invoke;  // counter = 3 since we share the same session
...
</code></pre>

<p>Using this sample you have 2 instances of a client calling a service and reusing the same session -state-.  You can also use the same approach to have 2 different clients talking to different services and share the same session. To do that you will have on the server side to use the HTTP Session directly to store your data between calls, and share it between services.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jesus Rodriguez: Interoperability Between OracleAS and Between Windows Communication Foundation (WCF)]]></title>
    <link href="http://tgrall.github.io/blog/2006/12/20/jesus-rodriguez-interoperability-between-oracleas-and-between-windows-communication-foundation-wcf/"/>
    <updated>2006-12-20T20:49:47+01:00</updated>
    <id>http://tgrall.github.io/blog/2006/12/20/jesus-rodriguez-interoperability-between-oracleas-and-between-windows-communication-foundation-wcf</id>
    <content type="html"><![CDATA[<p>Jesus Rodrigues has published on <a href="http://weblogs.asp.net/gsusx/default.aspx">his blog</a> multiple articles on interoperability between OracleAS and Microsoft  WCF:</p>

<p><strong>MTOM Interoperability:</strong></p>

<ul>
<li> <a href="http://weblogs.asp.net/gsusx/archive/2006/12/14/mtom-interoperability-between-oracle-application-server-and-windows-communication-foundation-part1-from-wcf-to-oracle.aspx">MTOM Interoperability between Oracle Application Server and Windows Communication Foundation Part1: From WCF to Oracle</a></li>
<li> <a href="http://weblogs.asp.net/gsusx/archive/2006/12/19/mtom-interoperability-between-oracle-application-server-and-windows-communication-foundation-part2-from-oracle-to-wcf.aspx">MTOM Interoperability between Oracle Application Server and Windows Communication Foundation Part2: From Oracle to WCF</a></li>
</ul>


<p><strong>WS-Security Interoperability:</strong></p>

<ul>
<li> <a href="http://weblogs.asp.net/gsusx/archive/2006/10/20/WCF-Oracle-Application-Server-WS_2D00_Security-interoperability-Part1_3A00_-from-WCF-to-Oracle.aspx">WCF Oracle Application Server WS-Security interoperability Part1: from WCF to Oracle</a></li>
<li> <a href="http://weblogs.asp.net/gsusx/archive/2006/11/02/WCF-Oracle-Application-Server-WS_2D00_Security-Interoperability-Part1_3A00_-from-Oracle-to-WCF.aspx">WCF Oracle Application Server WS-Security Interoperability Part 2: from Oracle to WCF</a></li>
</ul>


<p> In addition Jesus did also publish previously articles on OracleAS BPEL Process Manager and Microsoft:</p>

<ul>
<li> <a href="http://weblogs.asp.net/gsusx/archive/2006/06/01/WS_2D00_Addressing-interoperability-between-Oracle-BPEL-Process-Manager-and-Microsoft-Windows-Communication-Foundation.aspx">WS-Addressing interoperability between Oracle BPEL Process Manager and Microsoft Windows Communication Foundation</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
