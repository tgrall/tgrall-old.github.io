<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Php | Tug's Blog]]></title>
  <link href="http://tgrall.github.io/blog/categories/php/atom.xml" rel="self"/>
  <link href="http://tgrall.github.io/"/>
  <updated>2019-08-23T11:28:38+02:00</updated>
  <id>http://tgrall.github.io/</id>
  <author>
    <name><![CDATA[Tug Grall]]></name>
    <email><![CDATA[tugdual@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Derek Sivers's Blog: 7 Reasons I Switched Back to PHP After 2 Years on Rails]]></title>
    <link href="http://tgrall.github.io/blog/2007/09/25/derek-siverss-blog-7-reasons-i-switched-back-to-php-after-2-years-on-rails/"/>
    <updated>2007-09-25T01:20:37+02:00</updated>
    <id>http://tgrall.github.io/blog/2007/09/25/derek-siverss-blog-7-reasons-i-switched-back-to-php-after-2-years-on-rails</id>
    <content type="html"><![CDATA[<p>The new post on the <a href="http://www.oreillynet.com/ruby/">Ruby section of O&#8217;Reilly</a> authored by Derek Sivers is quite interesting, starting with the title:</p>

<ul>
<li><a href="http://www.oreillynet.com/ruby/blog/2007/09/7_reasons_i_switched_back_to_p_1.html"> 7 reasons I switched back to PHP after 2 years on Rails</a>I am far away of being a PHP expert, or even a Ruby one, but I have the impression that I could post a similar title with Java instead of PHP. If this is true that Java EE could look a little complex for a start -this is probably less true today with the new JavaEE simplifications-. Yes&hellip; when you compare Rails and Java alone it is more complex but we should not forget that Java is now more a platform than a simple programming language. And many developers and companies have built very productive solution on this platform.</li>
</ul>


<p>Since I am talking about Ruby on Rails here, it is important to mention again Grails and Groovy that provide on the Java platform a simple and productive way to
develop applications, and time to get back to the different reasons mentioned by Derek in his post:</p>

<h4>1 - “IS THERE ANYTHING RAILS/RUBY CAN DO THAT <strike>PHP</strike> JAVA CAN’T DO? … (thinking)… NO.”</h4>

<p>I believe that we will all agree on the fact that you can do anything you want in Java; Web applications, mobile applications, operating systems, rdbms, &hellip; the only limit is your brain! -and your skills ;) -</p>

<h4>2 - OUR ENTIRE COMPANY’S STUFF WAS IN <strike>PHP</strike> JAVA: DON’T UNDERESTIMATE INTEGRATION</h4>

<p>I think this is one of the key point here. Enterprise is using JavaEE a lot and it is part of the IT, moving to another technology will be expensive even if development is faster. In addition, the developers, administrators are used to develop and manage Java based applications.</p>

<p>And I do not want to talk about how complex it could be when you are building a Rails application on an existing database, designed from a pure Entity/Relation methodology&hellip;.</p>

<h4>3, 4 5 - I have nothing special to say here&hellip;</h4>

<h4>6 - I LOVE SQL</h4>

<p>I still see a lot of developers using SQL directly in Java programs. The nice thing about Java is the fact that based on your skills and what you like to do you can choose the way you want to access the database, simple SQL, powerful O-R Mappings, &hellip;</p>

<h4>7 - PROGRAMMING LANGUAGES ARE LIKE GIRLFRIENDS: THE NEW ONE IS BETTER BECAUSE <em>YOU</em> ARE BETTER</h4>

<p>I love this reason, but nothing special to say, I let you read the original post.</p>

<p>As you can see from the number of comments in Derek&rsquo;s blog -no times to read all of them- this entry generates lot of reactions.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP Will Beat Java? Not Sure About It...]]></title>
    <link href="http://tgrall.github.io/blog/2005/10/24/php-will-beat-java-not-sure-about-it-dot-dot-dot/"/>
    <updated>2005-10-24T21:21:11+02:00</updated>
    <id>http://tgrall.github.io/blog/2005/10/24/php-will-beat-java-not-sure-about-it-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>I would like react to last week marc andreessen&rsquo;s words (netscape founder during
  the php/zend conference andreessen basically says that
  <a href="http://management.silicon.com/itpro/0,39024675,39153501,00.htm">PHP will beat Java</a> and<a href="http://news.com.com/Andreessen+PHP+succeeding+where+Java+isnt/2100-1012_3-5903187.html"> succeeds where Java is not</a>. Most of the reasons that
  Andreesen used to justify this saying are because of PHP simplicity. Do you
  think he is talking about the language or the application server -yeah, let&rsquo;s
  call it this way&hellip; (J2EE&hellip;)..</p>

<p>Let&rsquo;s talk about J2EE first, it is true that when you take a look to the
  learning curve of J2EE and PHP it is a no brainer.. PHP is effectively more simple.
  But we can start with the acronyms themselves: J2EE==Enterprise, where
  PHP==Personal Home Page ( since then renamed Hypertext Processor). So from the
  origins the 2 technologies were not here to achieve the same goals. But PHP has
  proven that it could be used for complex application/Web sites, and still keep
  it simplicity.</p>

<p>So PHP is simple this is true, but Java on the server could be also. I think
  that the complexity comes from the fact that J2EE its expert always see an
  application as a enterprise application, and what that means in term of life
  cycle, development process, packaging and so on&hellip;.&nbsp;&nbsp;&nbsp; Why am I
  saying that it is coming from the expert? Just take a look to a PHP tutorial
  and a J2EE one? This is clear that you must be a very good and experienced
  developer to start with J2EE&hellip; But this is is not coming from the technologies,
  but mainly the way we talk about it. I think we should talk a little more about
  simple development with Java. For example focusing o JSP and JSTL for simple
  stuff. I agree that putting too much logic in JSP and reduce the number of
  layer is &lsquo;bad&rsquo; for complex applications, but it could be used for some. Why do
  we need to always package a WAR or EAR file? Yes you can technically deploy exploded
  archive and modify the information after the fact. This is not necessary the
  best practices but it could be useful for some applications (not necessary only
    in development environment.</p>

<p>About the language itself, sure that Java is more complex, it is considerate as
    a System Level Language, where PHP is a scripting language. Do we still compare
    Shell and C? No we need both of them isn&rsquo;t?</p>

<p>In the same time, Java as a language must be simplified, or let be more precise&hellip;
    I think Java developers need the simplicity of scripting languages such as PHP
    but with the power of Java under the cover. And this is happening right now. JavaScript
    is now integrated to Java 6, Groovy provided a well integrated JVM with a very powerful
    and simple syntax. Grails -Groovy On Rails- provided a simple framework for
    CRUD applications.</p>

<p>Still skeptical about the simplicity of PHP, try it&hellip;</p>

<p>Still skeptical about Java being simple, try a scripting language&hellip; for example Groovy</p>

<p>In conclusion the platform of my dream should:</p>

<ul>
<li>Keep the simple case simple</li>
<li>Made the impossible possible</li>
</ul>


<p>And I am sure that Java is the good language and platform for that; but
Groovy and other scripting languages will help. And I will also
    continue to develop using PHP too. And both worlds will coexists and be
    integrated using Web Services and or JSR-223.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Beta Version of Zend Core for Oracle Available]]></title>
    <link href="http://tgrall.github.io/blog/2005/09/02/beta-version-of-zend-core-for-oracle-available/"/>
    <updated>2005-09-02T21:06:39+02:00</updated>
    <id>http://tgrall.github.io/blog/2005/09/02/beta-version-of-zend-core-for-oracle-available</id>
    <content type="html"><![CDATA[<p><img src="http://www.oracle.com/technology/tech/php/zendcore/core4oracle_logo_m.gif" alt="" />Zend Core for Oracle, developed in partnership with Zend Technologies, supports businesses using PHP with Oracle Database for mission-critical Web applications. It provides a seamless out-of-the-box experience delivering a stable, high performance, easy-to-install and supported PHP development and production environment fully integrated with the Oracle Database.</p>

<p>Zend Core for Oracle will be available as a free download from Zend in late 2005; it is currently available in Beta. Support and updates for Zend Core for Oracle will be made available directly from Zend.</p>

<p><a href="http://www.oracle.com/technology/tech/php/zendcore/index.html">Find more and download link from OTN</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA['Scripting: Higher Level Programming for the 21st Century' Paper From John K. Ousterhout]]></title>
    <link href="http://tgrall.github.io/blog/2005/06/03/scripting-higher-level-programming-for-the-21st-century-paper-from-john-k-ousterhout/"/>
    <updated>2005-06-03T20:53:00+02:00</updated>
    <id>http://tgrall.github.io/blog/2005/06/03/scripting-higher-level-programming-for-the-21st-century-paper-from-john-k-ousterhout</id>
    <content type="html"><![CDATA[<p>With all the Java Scripting language around (Groovy, Rhino, Ruby, Jython&hellip; and so on) it is always interesting to understand where this come from&hellip; but also be able to talk with people about it, especially when they do not understand why scripting is interesting&hellip;</p>

<p>Googling around looking for some information on scripting benefits for a presentation I found this very intersting article from John Ousterhout, (he wrote the article in 1998) but I am sure you will still appreciate it&hellip;</p>

<p><a href="http://home.pacbell.net/ouster/scripting.html">Scripting: Higher Level Programming for the 21st Century</a>.</p>

<p>One of the most interesting part in this context is the paragraph 4:</p>

<blockquote><p>A scripting language is not a replacement for a system programming language or vice versa. Each is suited to a different set of tasks. For gluing and system integration, applications can be developed 5-10x faster with a scripting language; system programming languages will require large amounts of boilerplate and conversion code to connect the pieces, whereas this can be done directly with a scripting language. For complex algorithms and data structures, the strong typing of a system programming language makes programs easier to manage. Where execution speed is key, a system programming language can often run 10-20x faster than a scripting language because it makes fewer run-time checks.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[PHP on OC4J??? Yes With JSR 223 RI]]></title>
    <link href="http://tgrall.github.io/blog/2005/03/26/php-on-oc4j-yes-with-jsr-223-ri/"/>
    <updated>2005-03-26T04:38:37+01:00</updated>
    <id>http://tgrall.github.io/blog/2005/03/26/php-on-oc4j-yes-with-jsr-223-ri</id>
    <content type="html"><![CDATA[<p>In this entry I am explaining how to use the JSR-223 Reference Implementation into Oracle Containers for J2EE (OC4J).</p>

<p>Note: I have done this only on Windows XP Platform, I did not test on Unix/Linux yet.</p>

<p>1-The first thing to do is to download the <a href="http://jcp.org/aboutJava/communityprocess/pr/jsr223/index.html">JSR-223 Reference Implementation from the JCP Web site</a>.</p>

<p>2- Unzip the <em>sjp-1_0-ea-windows-i586.zip</em> in a directory let say <em>d:\java\jsr223-ri</em>.</p>

<p>3- You can choose here to do a proper installation (requires perl) or not. The <em>proper</em> installation preconfigure Apache Tomcat and the JSR-223 command line demonstration. Since what we are trying to achieve is to install the RI inside OC4J you do not need to do the installation.</p>

<p>4- Download</p>

<p><a href="http://www.grallandco.com/blog/archives/ant-jsr223.zip">this zip file</a>
that contains a Ant task and various files to configure and deploy the JSR223 sample into OC4J.</p>

<p>&nbsp;&nbsp;&nbsp;4.1 To execute the Ant script you must start to set the following environman variables:
*   JAVA_HOME that points to the JDK home
*   ORACLE_HOME that points to the OC4J home (eg: d:\oracle\oc4j)
*   JSR223_HOME that points to directory where you have unzipped the JSR223 RI (eg d:\java\jsr223)</p>

<p>&nbsp;&nbsp;&nbsp;4.2 Create a startup script for OC4J using the command</p>

<pre><code>ant
</code></pre>

<p>The default target create a script names <em>start-jsr223.bat</em> in the %ORACLE_HOME%\bin directory. This script set various environment variable and start OC4J with the correct system parameters to load correctly the PHP scrip engine from Java.</p>

<p>&nbsp;&nbsp;&nbsp;4.3 Start OC4J using the created script</p>

<pre><code>%ORACLE_HOME%\bin\start-jsr223.bat
</code></pre>

<p>&nbsp;&nbsp;&nbsp;4.4 Package and Deploy the Sample Application</p>

<pre><code>ant deploy
</code></pre>

<p>This target packacge the Web samples from the reference implementation in a ear/war file, modifying the <em>web.xml</em> to define the different servlet mapping needed by JSR223.</p>

<p>5 Use the sample application</p>

<p><code>http://localhost:8888/jsr-223</code></p>

<p>You can start to use PHP in OC4J ;-)  Take some time to read the sample code and specifications. JSR-223 is not only for Web container but also for JS2E, it is so interesting that the JSR-223 will probably be part of Mustang&hellip;</p>
]]></content>
  </entry>
  
</feed>
